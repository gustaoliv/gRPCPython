# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import numbersApi_pb2 as numbersApi__pb2


class NumbersApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SumNumbers = channel.unary_unary(
                '/numbers.NumbersApi/SumNumbers',
                request_serializer=numbersApi__pb2.InputNumbers.SerializeToString,
                response_deserializer=numbersApi__pb2.Number.FromString,
                )
        self.ListNumbers = channel.unary_stream(
                '/numbers.NumbersApi/ListNumbers',
                request_serializer=numbersApi__pb2.InputNumbers.SerializeToString,
                response_deserializer=numbersApi__pb2.Number.FromString,
                )
        self.CalculateUntilZero = channel.stream_stream(
                '/numbers.NumbersApi/CalculateUntilZero',
                request_serializer=numbersApi__pb2.InputNumber.SerializeToString,
                response_deserializer=numbersApi__pb2.Number.FromString,
                )


class NumbersApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SumNumbers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNumbers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateUntilZero(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NumbersApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SumNumbers': grpc.unary_unary_rpc_method_handler(
                    servicer.SumNumbers,
                    request_deserializer=numbersApi__pb2.InputNumbers.FromString,
                    response_serializer=numbersApi__pb2.Number.SerializeToString,
            ),
            'ListNumbers': grpc.unary_stream_rpc_method_handler(
                    servicer.ListNumbers,
                    request_deserializer=numbersApi__pb2.InputNumbers.FromString,
                    response_serializer=numbersApi__pb2.Number.SerializeToString,
            ),
            'CalculateUntilZero': grpc.stream_stream_rpc_method_handler(
                    servicer.CalculateUntilZero,
                    request_deserializer=numbersApi__pb2.InputNumber.FromString,
                    response_serializer=numbersApi__pb2.Number.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'numbers.NumbersApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NumbersApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SumNumbers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/numbers.NumbersApi/SumNumbers',
            numbersApi__pb2.InputNumbers.SerializeToString,
            numbersApi__pb2.Number.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNumbers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/numbers.NumbersApi/ListNumbers',
            numbersApi__pb2.InputNumbers.SerializeToString,
            numbersApi__pb2.Number.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CalculateUntilZero(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/numbers.NumbersApi/CalculateUntilZero',
            numbersApi__pb2.InputNumber.SerializeToString,
            numbersApi__pb2.Number.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
